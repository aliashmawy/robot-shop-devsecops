name: Shipping

on:

  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '**.java'  # Only trigger on changes to java files (**.java)
      - '.github/workflows/shipping.yaml'  # Include workflow file changes

  pull_request:
    branches:
      - master
    paths:
      - '**.java'  # Only trigger on changes to java files (**.java)
      - '.github/workflows/shipping.yaml'  # Include workflow file changes

jobs:

  sonar:
    name: Inspect - SAST
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        working-directory: shipping
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run:
         mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=erp-konecta -Dsonar.projectName='erp-konecta'

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   
        timeout-minutes: 5     
        with:
          scanMetadataReportFile: shipping/target/sonar/report-task.txt

  depchecktest:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build project with Maven
        working-directory: shopping
        run: mvn clean install
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: './shipping'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
  payment:
    name: Build and deploy shipping microservice
    runs-on: [self-hosted]  # Use a standard runner instead of self-hosted

    steps:
      - name: Checkout code 
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name:  Java install
        run: |
            sudo apt-get install openjdk 17 |
            java -version

      - name: Build Docker image
        run: |
          docker build -t shipping . 

      - name: Docker Login (use secrets)
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Push
        run: |
          docker tag shipping ${name}/shipping:latest
          docker push ${name}/shipping:latest